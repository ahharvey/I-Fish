render_chart = (container, title, y_axis_name, x_axis_name, chart_type, col_headers, counts) ->
  chart = undefined
  window.user_chart = new Highcharts.Chart(
    chart:
      renderTo: line_chart_container
      type: chart_type
      marginRight: 130
      marginBottom: 70

    title:
      text: title
      x: -20 #center

    subtitle:
      text: ""
      x: -20

    xAxis:
      title:
        text: x_axis_name

      categories: col_headers

    yAxis:
      title:
        text: y_axis_name

      plotLines: [
        value: 0
        width: 1
        color: "#808080"
      ]

    tooltip:
      formatter: ->
        "<b>" + @series.name + "</b><br/>" + @x + ": " + @y + "Â°C"

    legend:
      layout: "vertical"
      align: "right"
      verticalAlign: "top"
      x: -10
      y: 100
      borderWidth: 0

    credits:
      enabled: false

    series: [
      name: "Survey"
      data: counts
    ]
  )

$(document).ready ->
  if $('#cpue_chart_container').length
    $('#cpue_chart_container').highcharts "StockChart", 
      title:
        text: null
      credits:
        enabled: false
      chart:
        type: "areaspline"
      rangeSelector:
        selected: 1
        buttons: [
          {
            type: 'month',
            count: 3,
            text: '3m'
          }, {
            type: 'year',
            count: 1,
            text: '1y'
          }, {
            type: 'all',
            text: 'All'
          }]
      series: [
        name: $('#cpue_chart_container').data('series')
        data: $('#cpue_chart_container').data('chart')
        threshold: null 
      ]
      navigator:
        height: 25
      scrollbar:
        height: 10

$(document).ready ->
  if $('#container').length
    $('#container').highcharts
      chart:
        type: "bar"

      title:
        text: "Fruit Consumption"

      xAxis:
        categories: ["Apples", "Bananas", "Oranges"]

      yAxis:
        title:
          text: "Fruit eaten"

      series: [
        name: "Jane"
        data: [1, 0, 4]
      ,
        name: "John"
        data: [5, 7, 3]
      ]


$(document).ready ->
  if $("#graph_catch_per_effort_container").length
    fetchCpue $('#graph_catch_per_effort_container').data('id')
  if $("#graph_catch_composition").length
    fetchComposition $('#graph_catch_composition').data('id')
  if $("#graph_values_container").length
    fetchValue $('#graph_values_container').data('id')
  if $("#graph_length_container").length
    fetchLength $('#graph_length_container').data('id')
  if $("#graph_activity_container").length
    fetchActivity $('#graph_activity_container').data('id')

jQuery ->
  $("#cpe_btn_refresh").click ->
    fetchCpue $('#graph_catch_per_effort_container').data('id')

fetchCpue = (id) ->
  params =
    method: "catch_per_effort"
    date_from: $("#cpe_date_from").val()
    date_to: $("#cpe_date_to").val()
  $.ajax
    url: "/fisheries/" + $('#graph_catch_per_effort_container').data('id')
    type: "GET"
    async: true
    data: params
    dataType: "json"
    success: (data) ->
      cpueData data

fetchComposition = (id) ->
  params =
    method: "catch_composition"
    date_from: $("#cpe_date_from").val()
    date_to: $("#cpe_date_to").val()
  $.ajax
    url: "/fisheries/" + $('#graph_catch_composition').data('id')
    type: "GET"
    async: true
    data: params
    dataType: "json"
    success: (data) ->
      compositionData data

fetchValue = (id) ->
  params =
    method: "value"
    date_from: $("#cpe_date_from").val()
    date_to: $("#cpe_date_to").val()
  $.ajax
    url: "/fisheries/" + $('#graph_values_container').data('id')
    type: "GET"
    async: true
    data: params
    dataType: "json"
    success: (data) ->
      valueData data

fetchLength = (id) ->
  params =
    method: "length_frequency"
    date_from: $("#cpe_date_from").val()
    date_to: $("#cpe_date_to").val()
  $.ajax
    url: "/fisheries/" + $('#graph_length_container').data('id')
    type: "GET"
    async: true
    data: params
    dataType: "json"
    success: (data) ->
      lengthData data

fetchActivity = (id) ->
  params =
    method: "activity"
    date_from: $("#cpe_date_from").val()
    date_to: $("#cpe_date_to").val()
  $.ajax
    url: "/fisheries/" + id
    type: "GET"
    async: true
    data: params
    dataType: "json"
    success: (data) ->
      activityData data

cpueData = (data) -> 
  if $("#graph_catch_per_effort_container").length  
    options = 
      title:
        text: "Catch per Unit Effort"
        x: -20 #center
      subtitle:
        text: "average kg per hour"
        x: -20
      legend:
        enabled: false
      exporting:
        enabled: false
      credits:
        enabled: false
      xAxis:
        labels:
          rotation: -45
          y: 30
        categories: data['col_headers']
      yAxis:
        title:
          text: "kg per hour"
        min: 0
        plotLines: [
          value: 0
          width: 1
          color: "#808080"
        ]
      tooltip:
        valueSuffix: " kg/hour"
      series: [{
        name: 'CPUE',
        data: data['month_counts']
      }]
    $("#graph_catch_per_effort_container").highcharts options

valueData = (data) -> 
  if $("#graph_values_container").length  
    options = 
      title:
        text: "Catch per Unit Effort"
        x: -20 #center
      subtitle:
        text: "average Rupiah per hour"
        x: -20
      legend:
        enabled: false
      exporting:
        enabled: false
      credits:
        enabled: false
      xAxis:
        labels:
          rotation: -45
          y: 30
        categories: data['col_headers']
      yAxis:
        title:
          text: "IDR per hour"
        min: 0
        plotLines: [
          value: 0
          width: 1
          color: "#808080"
        ]
      tooltip:
        valueSuffix: " IDR/hour"
      series: [{
        name: 'Data',
        data: data['month_counts']
      }]
    $("#graph_values_container").highcharts options

compositionData = (data) ->
  if $("#graph_catch_composition").length  
    $("#graph_catch_composition").highcharts
      chart:
        plotBackgroundColor: null
        plotBorderWidth: null
        plotShadow: false
      credits:
        enabled: false
      exporting: 
        enabled: false
      title:
        text: "Catch Composition"
      tooltip:
        pointFormat: "{series.name}: <b>{point.percentage:.1f}%</b>"
      plotOptions:
        pie:
          allowPointSelect: true
          cursor: "pointer"
          dataLabels:
            enabled: true
            format: "<b>{point.name}</b>: {point.percentage:.1f} %"
            style:
              color: (Highcharts.theme and Highcharts.theme.contrastTextColor) or "black"
      series: [
        type: "pie"
        name: "Proportion of catch"
        data: data
      ]

lengthData = (data) ->
  if $("#graph_length_container").length  
    $("#graph_length_container").highcharts
      chart:
        type: "column"
      title:
        text: "Length Frequency"
      credits:
        enabled: false
      exporting:
        enabled: false
      xAxis:
        categories: data['col_headers']
        title:
          text: "Size classes"
      yAxis:
        min: 0
        title:
          text: "Frequency"
      tooltip:
        headerFormat: "<span style=\"font-size:10px\">{point.key} mm</span><table>"
        pointFormat: "<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>" + "<td style=\"padding:0\"><b>{point.y:.0f}</b></td></tr>"
        footerFormat: "</table>"
        shared: true
        useHTML: true
      plotOptions:
        column:
          pointPadding: 0.2
          borderWidth: 0
      series: [{
        name: "Species"
        data: data['length_counts']
      }]

    return

activityData = (data) ->
  if $("#graph_activity_container").length  
    # Create the chart
    $("#graph_activity_container").highcharts "StockChart",
      rangeSelector:
        selected: 1
        inputEnabled: $("#graph_activity_container").width() > 480
      title:
        text: "AAPL Stock Price"
      series: [
        name: "AAPL"
        data: data
        tooltip:
          valueDecimals: 2
      ]


